@{
    ViewData["Title"] = "Home Page";
}

<body>
    
    <main class="w-100 h-100">
        <section id="categoria">
            <div class="container pt-5">
                <h3 class="w-100">Categorias <span class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Adicionar</span></h3>
                <hr>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col" width="9%">#</th>
                            <th scope="col">Nome</th>
                            <th scope="col" width="9%">Ação</th>
                        </tr>
                    </thead>
                    <tbody id="contentCategories">
                    </tbody>
                </table>
            </div>
            <div class="modal modal-xl fade" id="addCategoryModal" data-bs-backdrop="static" data-bs-keyboard="false"
                 tabindex="-1">
                <div class="modal-dialog">
                    <form onsubmit="addCategory(this)">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Adicionar Categoria</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="exampleInputEmail1" class="form-label">Nome da Categoria</label>
                                    <input type="text" class="form-control" name="nome" id="nome">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Salvar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="modal modal-xl fade" id="editCategoryModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
                <div class="modal-dialog">
                    <form onsubmit="editCategory(this)">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Editar Categoria</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="exampleInputEmail1" class="form-label">Nome da Categoria</label>
                                    <input type="text" class="form-control" name="nome" id="nome">
                                    <input type="text" class="d-none" name="idCat" id="idCat">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Salvar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </section>
        <section id="produto">
            <div class="container pt-5">
                <h3 class="w-100">
                    Produtos
                    <span class="btn btn-primary float-end" data-bs-toggle="modal" data-bs-target="#addProductModal">Adicionar</span>
                </h3>
                <hr>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col" width="9%">#</th>
                            <th scope="col">Nome</th>
                            <th scope="col">Preço</th>
                            <th scope="col">Categoria</th>
                            <th scope="col" width="9%">Ação</th>
                        </tr>
                    </thead>
                    <tbody id="contentProducts">
                    </tbody>
                </table>
            </div>
            <div class="modal modal-xl fade" id="addProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
                <div class="modal-dialog">
                    <form onsubmit="addProduct(this)">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Adicionar Produto</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="exampleInputEmail1" class="form-label">Nome do Produto</label>
                                    <input type="text" class="form-control" name="nome" id="nome">
                                </div>
                                <div class="mb-3">
                                    <label for="preco" class="form-label">Preço</label>
                                    <input type="number" class="form-control" name="preco" id="preco">
                                </div>
                                <div class="mb-3">
                                    <label for="categorias" class="form-label">Categoria</label>
                                    <select name="categorias" id="categorias" class="form-control custom-select">
                                    </select>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Salvar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="modal modal-xl fade" id="editProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
                <div class="modal-dialog">
                    <form onsubmit="editProduct(this)">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Editar Produto</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3 d-none">
                                    <input type="text" class="form-control" name="idPro" id="idPro">
                                </div>
                                <div class="mb-3">
                                    <label for="exampleInputEmail1" class="form-label">Nome do Produto</label>
                                    <input type="text" class="form-control" name="nome" id="nome">
                                </div>
                                <div class="mb-3">
                                    <label for="preco" class="form-label">Preço</label>
                                    <input type="number" class="form-control" name="preco" id="preco">
                                </div>
                                <div class="mb-3">
                                    <label for="categorias" class="form-label">Categoria</label>
                                    <select name="categorias_" id="categorias_" class="form-control custom-select">
                                    </select>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Salvar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </section>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
            crossorigin="anonymous"></script>

    <script>
        fillTable('contentCategories');
        fillTable('contentProducts');

        async function fillTable(id){
            let table = document.getElementById(id);
            let select = document.getElementById('categorias');
            let select1 = document.getElementById('categorias_');
            table.innerHTML = "";
            let data = undefined;

            if(id != 'contentProducts'){
                select.innerHTML = "<option value=''>Selecione...</option>";
                select1.innerHTML = "<option value=''>Selecione...</option>";
                data = await getItemsCategory();
            } else {
                data = await getItemsProducts();
            }

            data.forEach(_data => {
                if(id == 'contentProducts') {
                    table.innerHTML += `
                    <tr>
                        <th scope="row">${_data.id}</th>
                        <td>${_data.nome}</td>
                        <td>${_data.preco}</td>
                        <td>${_data.categoria.nome}</td>
                        <td class="text-end">
                            <span class="btn btn-sm btn-success" onclick="setEditProduct(${_data.id})" data-bs-toggle="modal" data-bs-target="#editProductModal">O</span>
                            <span class="btn btn-sm btn-danger" onclick="deleteProduct(${_data.id})">X</span>
                        </td>
                    </tr>
                    `;
                } else {
                    table.innerHTML += `
                    <tr>
                        <th scope="row">${_data.id}</th>
                        <td>${_data.nome}</td>
                        <td class="text-end">
                            <span class="btn btn-sm btn-success" onclick="setEditCategory(${_data.id})" data-bs-toggle="modal" data-bs-target="#editCategoryModal">O</span>
                            <span class="btn btn-sm btn-danger" onclick="deleteCategory(${_data.id})">X</span>
                        </td>
                    </tr>
                    `;
                    select.innerHTML += `<option value='${_data.id}'>${_data.nome}</option>`;
                    select1.innerHTML += `<option value='${_data.id}'>${_data.nome}</option>`;
                }
            })
        }

        //----------------------------------------------------
        async function getItemsCategory(){
            return await fetch(
                `/api/Categoria`,
                {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                }
            ).then(async (response) => {
                return await response.json()
            });
        }

        async function addCategory(form) {
            event.preventDefault();

            let data = new FormData(form);
            let body = {
                nome: data.get('nome'),
            }

            await fetch(
                `/api/Categoria`,
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                }
            ).then(async (response) => {
                let res = await response.json()
                form.reset();
                fillTable('contentCategories');
            });
        }

        async function deleteCategory(id){
            await fetch(
                `/api/Categoria`,
                {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: id })
                }
            ).then(async (response) => {
                alert('Categoria Deletada.')
                fillTable('contentCategories');
            });
        }

        function setEditCategory(id) {
            console.log(id)
            document.getElementById('idCat').value = id;
        }

        async function editCategory(form){
            event.preventDefault();

            let data = new FormData(form);
            let body = {
                id: data.get('idCat'),
                nome: data.get('nome')
            }

            await fetch(
                `/api/Categoria`,
                {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                }
            ).then(async (response) => {
                alert('Categoria Atualizada.')
                fillTable('contentCategories');
            });
        }

        async function getItemsProducts(){
            return await fetch(
                `/api/Produtos`,
                {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                }
            ).then(async (response) => {
                return await response.json()
            });
        }

        async function addProduct(form) {
            event.preventDefault();

            let data = new FormData(form);
            let body = {
                nome: data.get('nome'),
                preco: data.get('preco'),
                categoriaId: data.get('categorias')
            }

            await fetch(
                `/api/Produtos`,
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                }
            ).then(async (response) => {
                let res = await response.json()
                console.log(res)
                form.reset();
                fillTable('contentProducts');
            });
        }

        async function deleteProduct(id){
            await fetch(
                `/api/Produtos`,
                {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({id: id})
                }
            ).then(async (response) => {
                alert('Deletado.')
                fillTable('contentProducts');
            });
        }

        function setEditProduct(id) {
            document.getElementById('idPro').value = id;
        }

        async function editProduct(form){
            event.preventDefault();

            let data = new FormData(form);
            let body = {
                id: data.get('idPro'),
                nome: data.get('nome'),
                preco: data.get('preco'),
                categoriaId: data.get('categorias_')
            }
            console.log(JSON.stringify(body))

            await fetch(
                `/api/Produtos`,
                {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                }
            ).then(async (response) => {
                alert('Atualizado.')
                fillTable('contentProducts');
            });
        }

        // --------------------------------------------

        function atualizaTabelas() {}

        function atualizaSelect() {}

    </script>
</body>